/**
 * Created by daniel on 2/28/16.
 * Invoke as `java Happy <num>`
 * Returns all happy numbers not exceeding <num>, one per line
 * (A number is happy if the sequence generated by iterating
 * squareSum eventually stabilizes on 1.)
 */
import java.util.ArrayList;
import java.util.Collections;

public class Happy {
  private ArrayList<Integer> happys;

  private int squareSum(int n) {
    // separates a number into digits and sums the squares of those digits
    int num = n;
    int sum = 0;

    ArrayList<Integer> digs = new ArrayList<>();
    while (num / 10 > 0) {
      digs.add(num % 10);
      num = num / 10;
    }
    digs.add(num);

    for (int dig : digs) {
        sum += dig * dig;
    }

    return sum;
  }

  public Happy (int n) {
    happys = new ArrayList<>();
    happys.add(1);

    ArrayList<Integer> unhappys = new ArrayList<>();
    ArrayList<Integer> unknowns = new ArrayList<>();

    // generate happys
    for (int i = 2 ; i <= n; i++) {
      int k = i;
      unknowns.add(k);

      while (!unknowns.isEmpty()) {
        int s = squareSum(k);

        if (happys.contains(s)) {
          happys.add(k);
          happys.addAll(unknowns);
          unknowns.clear();
        }
        else if (unhappys.contains(s) || unknowns.contains(s)) {
          unhappys.add(k);
          unhappys.addAll(unknowns);
          unknowns.clear();
        }
        else {
          k = squareSum(k);
          unknowns.add(k);
        }
      }
    }

    // filter and sort happys
    ArrayList<Integer> results = new ArrayList<>();

    for (int happy : happys) {
      if (happy <= n && !results.contains(happy)) {
        results.add(happy);
      }
    }

    Collections.sort(results);
    happys = results;
  }

  public String toString() {
    StringBuilder out = new StringBuilder();
    out.append(happys.get(0));

    for (int i = 1; i < happys.size(); i++) {
      out.append("\n");
      out.append(happys.get(i));
    }

    return out.toString();
  }

  public static void main(String[] args) {
    int parsedArg = Integer.parseInt(args[0]);

    Happy happy = new Happy(parsedArg);
    System.out.println(happy.toString());
  }
}
